name: Sync and Update

on:
  schedule:
    - cron: '0 * * * *' # Executa a cada hora
  workflow_dispatch: # Permite a execução manual através da UI do GitHub

jobs:
  sync_and_update:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout wwebjs-electron
      uses: actions/checkout@v2
      with:
        repository: AndyTargino/wwebjs-electron
        fetch-depth: 0

    - name: Criação da nova branch
      run: |
        git checkout -b temp-sync-branch

    - name: Obter a última versão da release do projeto base
      id: latest_version
      run: |
        LATEST_VERSION=$(curl --silent "https://api.github.com/repos/pedroslopez/whatsapp-web.js/releases/latest" | jq -r .tag_name)
        echo "::set-output name=version::$LATEST_VERSION"
        echo "Última versão da release obtida: $LATEST_VERSION"
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}

    - name: Clonar e copiar arquivos do whatsapp-web.js
      run: |
         git clone https://github.com/pedroslopez/whatsapp-web.js.git whatsapp-web.js

         - name: Aplicar modificações
         run: |
           # Atualizar `package.json`
           PACKAGE_VERSION=$(jq -r .version temp-whatsapp-web.js/package.json)
           echo "A última versão do projeto base é: $PACKAGE_VERSION"
           jq '.version = $newVersion' --arg newVersion "$PACKAGE_VERSION" package.json > temp.json && mv temp.json package.json
 
           # Aplicar as substituições no arquivo Client.js
           FILE_PATH="src/Client.js"
           sed -i "s|const puppeteer = require('puppeteer');|const pie = require('puppeteer-in-electron');|" $FILE_PATH
           sed -i "s|constructor(options = {}) {|constructor(puppeteerBrowser, browserWindow, options = {}) {|" $FILE_PATH
           sed -i "s|this.pupBrowser = null;|this.pupBrowser = puppeteerBrowser;\nthis.browserWindow = browserWindow;|" $FILE_PATH
           sed -i "/let \[browser, page\] = \[null, null\];/,/await page.authenticate(this.options.proxyAuthentication);/c const page = await pie.getPage(this.pupBrowser, this.browserWindow);\npage.setUserAgent(this.options.userAgent);" $FILE_PATH
           sed -i "/this.pupBrowser = browser;/d" $FILE_PATH
 
           # Imprimir o conteúdo do arquivo modificado
           echo "------------ CONTEÚDO DO ARQUIVO MODIFICADO ------------"
           cat $FILE_PATH
           echo "-------------------------------------------------------"
           echo "Modificações aplicadas no arquivo Client.js."
 
    - name: Copiar arquivos e remover diretório temporário
      run: |
          rsync -a --exclude '.git/' temp-whatsapp-web.js/ ./  # Copia os arquivos, excluindo a pasta .git
          rm -rf temp-whatsapp-web.js  # Remove o diretório temporário

    - name: Commit e Push
      run: |
          git config user.email "andytargino@outlook.com"
          git config user.name "AndyTargino"
          git add .
          git commit -m "Synchronized with upstream and applied custom changes" || echo "No changes to commit"
          git remote set-url origin https://${{ secrets.RELEASE_GITHUB_TOKEN }}@github.com/AndyTargino/wwebjs-electron.git
          git push --set-upstream origin temp-sync-branch
          echo "Mudanças commitadas e enviadas."
   
    - name: Criar e mesclar Pull Request
      run: |
          echo $GH_TOKEN | gh auth login --with-token
          PR_ID=$(gh pr create --base main --head temp-sync-branch --title "Synchronized with upstream and applied custom changes" --body "This PR includes the latest changes from the upstream and our custom changes." | grep -oP 'github.com/.+/pull/\K\d+')
          gh pr merge $PR_ID --auto --merge "Synchronized with upstream and applied custom changes"
      env:
          GH_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}
   
    - name: Criar release
      run: |
           echo $GH_TOKEN | gh auth login --with-token
           VERSION=$(jq -r .version package.json)
           gh release create $VERSION
      env:
           GH_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}
   
    - name: Excluir branch temporária
      run: |
           git push origin --delete temp-sync-branch
      env:
           GH_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}
