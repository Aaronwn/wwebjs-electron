name: Sync and Update

on:
  schedule:
    - cron: '0 * * * *' # Executa a cada hora
  workflow_dispatch: # Permite a execução manual através da UI do GitHub

jobs:
  sync_and_update:
    runs-on: ubuntu-latest

    steps:
      - name: Obter a última versão da release do projeto base
        id: latest_version
        run: |
          LATEST_VERSION=$(curl --silent "https://api.github.com/repos/pedroslopez/whatsapp-web.js/releases/latest" | jq -r .tag_name)
          echo "::set-output name=version::$LATEST_VERSION"
          echo "Última versão da release obtida: $LATEST_VERSION"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout a versão mais recente do projeto base
        uses: actions/checkout@v2
        with:
          repository: pedroslopez/whatsapp-web.js
          ref: ${{ steps.latest_version.outputs.version }}
          fetch-depth: 0
          
      - name: Criar e mudar para uma nova branch
        run: |
          git checkout -b sync_branch_${{ steps.latest_version.outputs.version }}

      - name: Aplicar modificações
        run: |
          # Restaurar arquivos específicos do seu repositório
          git checkout ${{ github.sha }} -- README.md .github/ .eslintrc.json
          echo "Arquivos específicos restaurados."

          # Atualizar `package.json`
          PACKAGE_VERSION=$(jq -r .version package.json)
          echo "A última versão do projeto base é: $PACKAGE_VERSION"
          jq '.version = $newVersion' --arg newVersion "$PACKAGE_VERSION" package.json > temp.json && mv temp.json package.json

          # Aplicar as substituições no arquivo Client.js
          FILE_PATH="src/Client.js"
          sed -i 's|const puppeteer = require('"'"'puppeteer'"'"');|const pie = require('"'"'puppeteer-in-electron'"'"');|g' $FILE_PATH
          sed -i 's|constructor(options = {})|constructor(puppeteerBrowser, browserWindow, options = {})|' $FILE_PATH
          sed -i 's|this.pupBrowser = null;|this.pupBrowser = puppeteerBrowser;\n        this.browserWindow = browserWindow;|' $FILE_PATH
          sed -i '/let \[browser, page\] = \[null, null\];/,/await page.authenticate(this.options.proxyAuthentication);/c\        const page = await pie.getPage(this.pupBrowser, this.browserWindow);\n        page.setUserAgent(this.options.userAgent);' $FILE_PATH
          sed -i '/this.pupBrowser = browser;/d' $FILE_PATH
          echo "Modificações aplicadas no arquivo Client.js."

      - name: Commit e Push na nova branch
        run: |
          git config user.email "andytargino@outlook.com"
          git config user.name "AndyTargino"
          git add .
          git commit -m "Synchronized with upstream and applied custom changes" || echo "No changes to commit"
          git remote set-url origin https://${{ secrets.RELEASE_GITHUB_TOKEN }}@github.com/AndyTargino/wwebjs-electron.git
          git push --set-upstream origin sync_branch_${{ steps.latest_version.outputs.version }}
          echo "Mudanças commitadas e enviadas na nova branch."

      - name: Merge na main e Push
        run: |
          git checkout main
          git merge sync_branch_${{ steps.latest_version.outputs.version }}
          git push
          echo "Merge realizado na main."
