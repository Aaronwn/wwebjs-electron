name: Sync and Update

on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

jobs:
  sync_and_update:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout wwebjs-electron
      uses: actions/checkout@v2
      with:
        repository: AndyTargino/wwebjs-electron
        fetch-depth: 0

    - name: Obter a última versão da release do projeto base
      id: latest_version
      run: |
        LATEST_VERSION=$(curl --silent "https://api.github.com/repos/pedroslopez/whatsapp-web.js/releases/latest" | jq -r .tag_name)
        echo "::set-output name=version::$LATEST_VERSION"
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}

    - name: Verificar se a nova versão é mais recente
      id: check_version
      run: |
        MY_LATEST_VERSION=$(curl --silent "https://api.github.com/repos/AndyTargino/wwebjs-electron/releases/latest" | jq -r .tag_name)
        LATEST_LIB_VERSION=${{ steps.latest_version.outputs.version }}
        MOST_RECENT=$(printf "%s\n%s\n" "$MY_LATEST_VERSION" "$LATEST_LIB_VERSION" | sort -V | tail -1)
        if [[ "$MOST_RECENT" == "$MY_LATEST_VERSION" ]]; then
          echo "::set-output name=should_continue::false"
        else
          echo "::set-output name=should_continue::true"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}

    - name: Criação da nova branch
      run: |
        if git show-ref --quiet refs/heads/temp-sync-branch; then
          git branch -D temp-sync-branch
        fi
        git checkout -b temp-sync-branch

    - name: Clonar e copiar arquivos do whatsapp-web.js
      if: steps.check_version.outputs.should_continue == 'true'
      run: git clone https://github.com/pedroslopez/whatsapp-web.js.git whatsapp-web.js

    - name: Copiar arquivos e remover diretório temporário
      if: steps.check_version.outputs.should_continue == 'true'
      run: rsync -a --exclude '.git/' --exclude 'README.md' --exclude 'package.json' --exclude '.eslintrc.json' --exclude '.github/' whatsapp-web.js/ ./

    - name: Aplicar modificações
      if: steps.check_version.outputs.should_continue == 'true'
      run: |
        PACKAGE_VERSION=$(jq -r .version whatsapp-web.js/package.json)
        jq '.version = $newVersion' --arg newVersion "$PACKAGE_VERSION" package.json > temp.json && mv temp.json package.json
        FILE_PATH="src/Client.js"
        sed -i "s|const puppeteer = require('puppeteer');|const pie = require('puppeteer-in-electron');|" $FILE_PATH
        sed -i "s|constructor(options = {}) {|constructor(puppeteerBrowser, browserWindow, options = {}) {|" $FILE_PATH
        sed -i "s|this.pupBrowser = null;|this.pupBrowser = puppeteerBrowser;\nthis.browserWindow = browserWindow;|" $FILE_PATH
        sed -i "/let \[browser, page\] = \[null, null\];/,/this.pupPage = page;/c const page = await pie.getPage(this.pupBrowser, this.browserWindow);\npage.setUserAgent(this.options.userAgent);\n\nawait page.setUserAgent(this.options.userAgent);\nif (this.options.bypassCSP) await page.setBypassCSP(true);\n\nthis.pupPage = page;" $FILE_PATH
        sed -i "/this.pupBrowser = browser;/d" $FILE_PATH

    - name: Verificar se há commits novos
      id: check_commits
      if: steps.check_version.outputs.should_continue == 'true'
      run: |
        NEW_COMMITS=$(git log main..temp-sync-branch --oneline)
        if [ -z "$NEW_COMMITS" ]; then
          echo "::set-output name=has_changes::false"
        else
          echo "::set-output name=has_changes::true"
        fi

    - name: Commit e Push
      if: steps.check_version.outputs.should_continue == 'true'
      run: |
        git config user.email "andytargino@outlook.com"
        git config user.name "AndyTargino"
        git add .
        git commit -m "Synchronized with upstream and applied custom changes" || echo "No changes to commit"
        git remote set-url origin https://${{ secrets.RELEASE_GITHUB_TOKEN }}@github.com/AndyTargino/wwebjs-electron.git
        git push --set-upstream origin temp-sync-branch
      env:
          GH_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}

    - name: Criar e mesclar Pull Request
      if: steps.check_version.outputs.should_continue == 'true' && steps.check_commits.outputs.has_changes == 'true'
      run: |
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "GitHub Actions"
        git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/AndyTargino/wwebjs-electron.git
        PR_ID=$(gh pr create --base main --head temp-sync-branch --title "Synchronized with upstream and applied custom changes" --body "This PR includes the latest changes from the upstream and our custom changes." | grep -oP 'github.com/.+/pull/\K\d+')
        gh pr merge $PR_ID --auto --merge
      env:
          GH_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}

    - name: Criar release
      if: steps.check_version.outputs.should_continue == 'true' && steps.check_commits.outputs.has_changes == 'true'
      run: |
        VERSION=$(jq -r .version package.json)
        gh release create $VERSION
      env:
          GH_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}

    - name: Excluir branch temporária
      if: steps.check_version.outputs.should_continue == 'true'
      run: git push origin --delete temp-sync-branch
      env:
           GH_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}
